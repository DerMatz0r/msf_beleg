/*
 * generated by Xtext 2.30.0
 */
package de.htwdd.sf.beleg.s85769s88750.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class User_StoriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.User_Stories");
		private final Assignment cUser_storyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cUser_storyUser_StoryParserRuleCall_0 = (RuleCall)cUser_storyAssignment.eContents().get(0);
		
		//User_Stories:
		//    user_story+=User_Story+;
		@Override public ParserRule getRule() { return rule; }
		
		//user_story+=User_Story+
		public Assignment getUser_storyAssignment() { return cUser_storyAssignment; }
		
		//User_Story
		public RuleCall getUser_storyUser_StoryParserRuleCall_0() { return cUser_storyUser_StoryParserRuleCall_0; }
	}
	public class User_StoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.User_Story");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTitleAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTitleTitleParserRuleCall_0_0 = (RuleCall)cTitleAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cUmKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNutzenAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNutzenNutzenParserRuleCall_3_0 = (RuleCall)cNutzenAssignment_3.eContents().get(0);
		private final Keyword cMöchteIchAlsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRolleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cRolleRolleParserRuleCall_5_0 = (RuleCall)cRolleAssignment_5.eContents().get(0);
		private final Assignment cZiel_wunschAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cZiel_wunschZiel_WunschParserRuleCall_6_0 = (RuleCall)cZiel_wunschAssignment_6.eContents().get(0);
		private final Keyword cFullStopKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//User_Story:
		//    title=Title ":" 'Um' nutzen=Nutzen ', möchte ich als' rolle=Rolle ziel_wunsch=Ziel_Wunsch '.';
		@Override public ParserRule getRule() { return rule; }
		
		//title=Title ":" 'Um' nutzen=Nutzen ', möchte ich als' rolle=Rolle ziel_wunsch=Ziel_Wunsch '.'
		public Group getGroup() { return cGroup; }
		
		//title=Title
		public Assignment getTitleAssignment_0() { return cTitleAssignment_0; }
		
		//Title
		public RuleCall getTitleTitleParserRuleCall_0_0() { return cTitleTitleParserRuleCall_0_0; }
		
		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'Um'
		public Keyword getUmKeyword_2() { return cUmKeyword_2; }
		
		//nutzen=Nutzen
		public Assignment getNutzenAssignment_3() { return cNutzenAssignment_3; }
		
		//Nutzen
		public RuleCall getNutzenNutzenParserRuleCall_3_0() { return cNutzenNutzenParserRuleCall_3_0; }
		
		//', möchte ich als'
		public Keyword getMöchteIchAlsKeyword_4() { return cMöchteIchAlsKeyword_4; }
		
		//rolle=Rolle
		public Assignment getRolleAssignment_5() { return cRolleAssignment_5; }
		
		//Rolle
		public RuleCall getRolleRolleParserRuleCall_5_0() { return cRolleRolleParserRuleCall_5_0; }
		
		//ziel_wunsch=Ziel_Wunsch
		public Assignment getZiel_wunschAssignment_6() { return cZiel_wunschAssignment_6; }
		
		//Ziel_Wunsch
		public RuleCall getZiel_wunschZiel_WunschParserRuleCall_6_0() { return cZiel_wunschZiel_WunschParserRuleCall_6_0; }
		
		//'.'
		public Keyword getFullStopKeyword_7() { return cFullStopKeyword_7; }
	}
	public class TitleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.Title");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSubstantivAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSubstantivSUBSTANTIVTerminalRuleCall_0_0 = (RuleCall)cSubstantivAssignment_0.eContents().get(0);
		private final Assignment cVerbAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVerbVERBTerminalRuleCall_1_0 = (RuleCall)cVerbAssignment_1.eContents().get(0);
		
		//Title:
		//    substantiv=SUBSTANTIV verb=VERB;
		@Override public ParserRule getRule() { return rule; }
		
		//substantiv=SUBSTANTIV verb=VERB
		public Group getGroup() { return cGroup; }
		
		//substantiv=SUBSTANTIV
		public Assignment getSubstantivAssignment_0() { return cSubstantivAssignment_0; }
		
		//SUBSTANTIV
		public RuleCall getSubstantivSUBSTANTIVTerminalRuleCall_0_0() { return cSubstantivSUBSTANTIVTerminalRuleCall_0_0; }
		
		//verb=VERB
		public Assignment getVerbAssignment_1() { return cVerbAssignment_1; }
		
		//VERB
		public RuleCall getVerbVERBTerminalRuleCall_1_0() { return cVerbVERBTerminalRuleCall_1_0; }
	}
	public class NutzenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.Nutzen");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSubjectAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSubjectSUBSTANTIVTerminalRuleCall_0_0 = (RuleCall)cSubjectAssignment_0.eContents().get(0);
		private final Assignment cVerbAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVerbZUZUZUVERBTerminalRuleCall_1_0 = (RuleCall)cVerbAssignment_1.eContents().get(0);
		
		//Nutzen:
		//    subject=SUBSTANTIV verb=ZUZUZUVERB;
		@Override public ParserRule getRule() { return rule; }
		
		//subject=SUBSTANTIV verb=ZUZUZUVERB
		public Group getGroup() { return cGroup; }
		
		//subject=SUBSTANTIV
		public Assignment getSubjectAssignment_0() { return cSubjectAssignment_0; }
		
		//SUBSTANTIV
		public RuleCall getSubjectSUBSTANTIVTerminalRuleCall_0_0() { return cSubjectSUBSTANTIVTerminalRuleCall_0_0; }
		
		//verb=ZUZUZUVERB
		public Assignment getVerbAssignment_1() { return cVerbAssignment_1; }
		
		//ZUZUZUVERB
		public RuleCall getVerbZUZUZUVERBTerminalRuleCall_1_0() { return cVerbZUZUZUVERBTerminalRuleCall_1_0; }
	}
	public class RolleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.Rolle");
		private final Assignment cSubstantivAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSubstantivSUBSTANTIVTerminalRuleCall_0 = (RuleCall)cSubstantivAssignment.eContents().get(0);
		
		//Rolle:
		//    substantiv=SUBSTANTIV;
		@Override public ParserRule getRule() { return rule; }
		
		//substantiv=SUBSTANTIV
		public Assignment getSubstantivAssignment() { return cSubstantivAssignment; }
		
		//SUBSTANTIV
		public RuleCall getSubstantivSUBSTANTIVTerminalRuleCall_0() { return cSubstantivSUBSTANTIVTerminalRuleCall_0; }
	}
	public class Ziel_WunschElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.Ziel_Wunsch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSubjectAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSubjectSUBSTANTIVTerminalRuleCall_0_0 = (RuleCall)cSubjectAssignment_0.eContents().get(0);
		private final Assignment cVerbAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVerbVERBTerminalRuleCall_1_0 = (RuleCall)cVerbAssignment_1.eContents().get(0);
		
		//Ziel_Wunsch:
		//    subject=SUBSTANTIV verb=VERB;
		@Override public ParserRule getRule() { return rule; }
		
		//subject=SUBSTANTIV verb=VERB
		public Group getGroup() { return cGroup; }
		
		//subject=SUBSTANTIV
		public Assignment getSubjectAssignment_0() { return cSubjectAssignment_0; }
		
		//SUBSTANTIV
		public RuleCall getSubjectSUBSTANTIVTerminalRuleCall_0_0() { return cSubjectSUBSTANTIVTerminalRuleCall_0_0; }
		
		//verb=VERB
		public Assignment getVerbAssignment_1() { return cVerbAssignment_1; }
		
		//VERB
		public RuleCall getVerbVERBTerminalRuleCall_1_0() { return cVerbVERBTerminalRuleCall_1_0; }
	}
	
	
	private final User_StoriesElements pUser_Stories;
	private final User_StoryElements pUser_Story;
	private final TitleElements pTitle;
	private final NutzenElements pNutzen;
	private final RolleElements pRolle;
	private final Ziel_WunschElements pZiel_Wunsch;
	private final TerminalRule tANY_BUT_NOT_Z;
	private final TerminalRule tANY_BUT_NOT_U;
	private final TerminalRule tNOT_ZU;
	private final TerminalRule tNEW_Z;
	private final TerminalRule tNEW_END;
	private final TerminalRule tZUZUZUVERB;
	private final TerminalRule tSUBSTANTIV;
	private final TerminalRule tVERB;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pUser_Stories = new User_StoriesElements();
		this.pUser_Story = new User_StoryElements();
		this.pTitle = new TitleElements();
		this.pNutzen = new NutzenElements();
		this.pRolle = new RolleElements();
		this.pZiel_Wunsch = new Ziel_WunschElements();
		this.tANY_BUT_NOT_Z = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.ANY_BUT_NOT_Z");
		this.tANY_BUT_NOT_U = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.ANY_BUT_NOT_U");
		this.tNOT_ZU = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.NOT_ZU");
		this.tNEW_Z = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.NEW_Z");
		this.tNEW_END = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.NEW_END");
		this.tZUZUZUVERB = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.ZUZUZUVERB");
		this.tSUBSTANTIV = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.SUBSTANTIV");
		this.tVERB = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.htwdd.sf.beleg.s85769s88750.MyDsl.VERB");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.htwdd.sf.beleg.s85769s88750.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//User_Stories:
	//    user_story+=User_Story+;
	public User_StoriesElements getUser_StoriesAccess() {
		return pUser_Stories;
	}
	
	public ParserRule getUser_StoriesRule() {
		return getUser_StoriesAccess().getRule();
	}
	
	//User_Story:
	//    title=Title ":" 'Um' nutzen=Nutzen ', möchte ich als' rolle=Rolle ziel_wunsch=Ziel_Wunsch '.';
	public User_StoryElements getUser_StoryAccess() {
		return pUser_Story;
	}
	
	public ParserRule getUser_StoryRule() {
		return getUser_StoryAccess().getRule();
	}
	
	//Title:
	//    substantiv=SUBSTANTIV verb=VERB;
	public TitleElements getTitleAccess() {
		return pTitle;
	}
	
	public ParserRule getTitleRule() {
		return getTitleAccess().getRule();
	}
	
	//Nutzen:
	//    subject=SUBSTANTIV verb=ZUZUZUVERB;
	public NutzenElements getNutzenAccess() {
		return pNutzen;
	}
	
	public ParserRule getNutzenRule() {
		return getNutzenAccess().getRule();
	}
	
	//Rolle:
	//    substantiv=SUBSTANTIV;
	public RolleElements getRolleAccess() {
		return pRolle;
	}
	
	public ParserRule getRolleRule() {
		return getRolleAccess().getRule();
	}
	
	//Ziel_Wunsch:
	//    subject=SUBSTANTIV verb=VERB;
	public Ziel_WunschElements getZiel_WunschAccess() {
		return pZiel_Wunsch;
	}
	
	public ParserRule getZiel_WunschRule() {
		return getZiel_WunschAccess().getRule();
	}
	
	//terminal fragment ANY_BUT_NOT_Z:
	//    ('a'..'y');
	public TerminalRule getANY_BUT_NOT_ZRule() {
		return tANY_BUT_NOT_Z;
	}
	
	//terminal fragment ANY_BUT_NOT_U:
	//    ('a'..'t' | 'v'..'z');
	public TerminalRule getANY_BUT_NOT_URule() {
		return tANY_BUT_NOT_U;
	}
	
	//terminal fragment NOT_ZU:
	//    ('a'..'t' | 'v'..'y');
	public TerminalRule getNOT_ZURule() {
		return tNOT_ZU;
	}
	
	//terminal fragment NEW_Z:
	//    (('z')+ NOT_ZU);
	public TerminalRule getNEW_ZRule() {
		return tNEW_Z;
	}
	
	//terminal fragment NEW_END:
	//    ('z')* ('zuzu');
	public TerminalRule getNEW_ENDRule() {
		return tNEW_END;
	}
	
	//terminal ZUZUZUVERB:
	//    ('zu') ((ANY_BUT_NOT_Z | NEW_Z))* NEW_END ((ANY_BUT_NOT_Z | NEW_Z))* ('en' | 'ern' | 'eln');
	public TerminalRule getZUZUZUVERBRule() {
		return tZUZUZUVERB;
	}
	
	//terminal SUBSTANTIV:
	//     ('A'..'Z' | 'Ä' | 'Ü' | 'Ö') ('a'..'z' | 'ä' | 'ü' | 'ö' | 'ß')+;
	public TerminalRule getSUBSTANTIVRule() {
		return tSUBSTANTIV;
	}
	
	//terminal VERB:
	//    ('a'..'z' | 'ä' | 'ö' | 'ü' | 'ß')+ ('en' | 'ern' | 'eln');
	public TerminalRule getVERBRule() {
		return tVERB;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
